type redis = untyped

module Limit
VERSION: String

class BaseLimiter
self.@redis: redis
@logger: Logger

@redis: redis | nil

def self.connection: -> nil

def self.create_connection: (String, Integer, String) -> redis

def self.log: (String, String) -> nil

def self.logger: -> Logger

attr_reader identifier_prefix: String
attr_reader limit_calculator: Proc

def initialize: -> untyped

def allowed?: (String) -> bool

def get_current_limit: (String) -> Hash[String, Integer]

def get_key: (String) -> String

def current_micros: (nil) -> Integer

def log: (String, String) -> nil

def redis_pipeline: () { (redis) -> untyped } -> untyped
end
end
